name: CI

on:
  push:
    branches: [ "main", "feature/oauth-service-adding" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
        
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      - name: Set up Maven 3.9.5
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.9.5
          
      - name: Build with Maven
        run: mvn -B clean install

      - name: Show files in workspace
        run: ls -R
        
      - name: Rename jar for Docker
        run: cp target/t-services-oauth-1.0.0.jar app.jar
        
      - name: Upload jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: app.jar
          
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oauth-provider:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'
          
      - name: Forward Minikube API port
        run: |
          ssh -o StrictHostKeyChecking=no -N -L 8443:127.0.0.1:32771 summit@84.201.178.102 &
          SSH_PID=$!
          echo "Waiting for tunnel to be ready..."
          for i in {1..10}; do
            if nc -z localhost 8443; then
              echo "Tunnel ready"
              break
            fi
            sleep 1
          done
          
      - name: Setup kubeconfig
        run: |
          mkdir -p $HOME/.kube
          printf "%s" "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
            
      - name: Test kubeconfig
        run: |
          export KUBECONFIG=$HOME/.kube/config
          nc -z localhost 8443
          kubectl get nodes
        env:
          KUBECONFIG: $HOME/.kube/config
      - name: Show k8s files
        run: ls -R ./k8s
            
      - name: Deploy to Minikube
        run: |
          export KUBECONFIG=$HOME/.kube/config
          echo "Check tunnel"
          nc -z localhost 8443
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
        env:
          KUBECONFIG: $HOME/.kube/config

      - name: Kill SSH tunnel
        run: kill $SSH_PID
